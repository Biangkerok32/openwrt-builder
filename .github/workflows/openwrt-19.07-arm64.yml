name: openwrt-19.07-arm64

on:
  schedule:
    - cron: '0 0 5/15 * *'
  repository_dispatch:
    types: 'run-arm64'

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event_name == 'schedule' || github.event.action == 'run-arm64'
    steps:
      - name: Workspace init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android /usr/lib/jvm /opt/ghc
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf tree curl
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          git clone https://github.com/RookieZoe/openwrt-builder.git $GITHUB_WORKSPACE/configs
          git clone -b 19.07 --single-branch https://github.com/Lienol/openwrt.git $GITHUB_WORKSPACE/openwrt

      - name: Feeds init
        run: |
          sed -i -e '/openwrt-luci.git;17.01/d' $GITHUB_WORKSPACE/openwrt/feeds.conf.default
          echo "src-git luci https://github.com/Lienol/openwrt-luci.git;19.07" >> $GITHUB_WORKSPACE/openwrt/feeds.conf.default
          cd $GITHUB_WORKSPACE/openwrt
          svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/parted package/parted
          git clone https://github.com/tuanqing/install-program package/install-program
          sed -i -e '/exit 0/d' $GITHUB_WORKSPACE/openwrt/package/default-settings/files/zzz-default-settings
          cat $GITHUB_WORKSPACE/configs/zzz-default-settings.append >> $GITHUB_WORKSPACE/openwrt/package/default-settings/files/zzz-default-settings
          ./scripts/feeds update -a
          cat >> $GITHUB_WORKSPACE/openwrt/feeds/luci/themes/luci-theme-bootstrap/htdocs/luci-static/bootstrap/cascade.css << EOF
          #cbi-passwall-acl_rule .cbi-dropdown:not(.btn):not(.cbi-button),#cbi-passwall-acl_rule .cbi-dynlist{min-width:unset;}
          #list-content table{width:100%;}#list-content table tr td{height:30px;line-height:30px;}
          EOF
          ./scripts/feeds install -a

      - name: Make defconfig
        run: |
          rm -f $GITHUB_WORKSPACE/openwrt/.config
          cp $GITHUB_WORKSPACE/configs/openwrt-19.07-arm64.config $GITHUB_WORKSPACE/openwrt/.config
          cd $GITHUB_WORKSPACE/openwrt/
          make defconfig

      - name: Make download
        run: |
          cd $GITHUB_WORKSPACE/openwrt/
          make download -j$(nproc)
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Multi-thread compile
        run: |
          cd $GITHUB_WORKSPACE/openwrt/
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s

      - name: Single-thread compile
        if: failure()
        run: |
          cd $GITHUB_WORKSPACE/openwrt/
          make -j1 V=s

      - name: Pack up targets
        if: success()
        run: |
          rm -rf $GITHUB_WORKSPACE/targets/
          mkdir -p $GITHUB_WORKSPACE/targets/rootfs
          find $GITHUB_WORKSPACE/openwrt/bin/targets/ -name "*rootfs.tar.gz" | xargs -i cp -f {} $GITHUB_WORKSPACE/targets/rootfs
          tree $GITHUB_WORKSPACE/targets/

      - name: Upload targets [rootfs]
        if: success()
        uses: actions/upload-artifact@main
        with:
          name: openwrt-19.07-aarch64-rootfs.tar.gz
          path: ${{ github.workspace }}/targets/rootfs

      - name: Checkout mknop
        uses: actions/checkout@v2
        with:
          repository: RookieZoe/mknop
          token: ${{ secrets.PRIVATE_GITHUB_PAT }}
          path: ${{ github.workspace }}/mknop

      - name: Make firmware
        if: success()
        run: |
          find $GITHUB_WORKSPACE/openwrt/bin/targets/ -name "*rootfs.tar.gz" | xargs -i cp -f {} $GITHUB_WORKSPACE/mknop/openwrt/
          cd $GITHUB_WORKSPACE/mknop/
          sudo ./make -d -k 4.19.106
          mkdir -p $GITHUB_WORKSPACE/targets/phicomm-n1
          cd $GITHUB_WORKSPACE/mknop/out
          gzip $(find ./ -name *.img)
          mv $(find ./ -name *.img.gz) $GITHUB_WORKSPACE/targets/phicomm-n1

      - name: Upload firmware [phicomm n1]
        if: success()
        uses: actions/upload-artifact@main
        with:
          name: phicomm-n1-k4.19.106-openwrt-firmware.img.gz
          path: ${{ github.workspace }}/targets/phicomm-n1
